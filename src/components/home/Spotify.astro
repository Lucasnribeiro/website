---
---

<div class="spotify border border-lime-500 content text-lime-500">
  <div class="border-b border-lime-500 bg-black bg-opacity-40 pl-2">
    <p>Currently listening</p>
  </div>
  <div id="song-info" class="flex space-x-3 p-2">
    <div id="cover">cover</div>
    <div class="overflow-hidden" style="width: 200px;">
      <div id="title-container" class="whitespace-nowrap overflow-hidden">
        <div id="title" class="inline-block pl-16">title</div>
      </div>
      <div id="artist">artist</div>
    </div>
  </div>
</div>

<style>
  @keyframes scroll-left {
    0% { transform: translateX(0); }
    100% { transform: translateX(-100%); }
  }
  
  .scroll-animation {
    animation: scroll-left 3s linear infinite;
  }
</style>

<script>
  function fetchSpotifyData() {
    fetch('https://backend.lucasnribeiro.com/currently_playing_spotify.php')
      .then(response => response.json())
      .then(data => {
        const songInfo = document.getElementById('song-info');
        const cover = document.getElementById('cover');
        const titleContainer = document.getElementById('title-container');
        const title = document.getElementById('title');
        const artist = document.getElementById('artist');

        if (data && data.item && songInfo && cover && titleContainer && title && artist) {
          cover.innerHTML = `<img src="${data.item.album.images[0].url}" alt="Album Cover" width="64" height="64">`;
          title.textContent = data.item.name;
          artist.textContent = data.item.artists.map((artist: any) => artist.name).join(', ');
          songInfo.style.display = 'flex';

          // Check if title needs scrolling
          if (title.offsetWidth > titleContainer.offsetWidth) {
            title.classList.add('scroll-animation');
          } else {
            title.classList.remove('scroll-animation');
          }
        } else {
          console.error('Invalid data structure received or elements not found');
        }
      })
      .catch(error => {
        console.error('Error fetching Spotify data:', error);
      });
  }

  // Fetch data immediately and then every 10 seconds
  fetchSpotifyData();
  setInterval(fetchSpotifyData, 10000);
</script>